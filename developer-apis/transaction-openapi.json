{
  "openapi": "3.0.3",
  "info": {
    "title": "Transaction API",
    "description": "This API provides realtime transaction APIs.",
    "license": {
      "name": ""
    },
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://api.dune.com/api"
    }
  ],
  "paths": {
    "/beta/transactions/{address}": {
      "get": {
        "tags": [
          "crate"
        ],
        "operationId": "endpoint",
        "parameters": [
          {
            "name": "X-Dune-Api-Key",
            "in": "header",
            "description": "API key to access the service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The offset to paginate through result sets. This is a cursor being passed from the previous response, only use what the backend has returned on previous responses.",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of transactions to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "chain_id",
            "in": "query",
            "description": "The chain ID to filter transactions by",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                },
                "example": {
                  "next_offset": "AAYd_b6aoIAAAAABAAAAAA4KZhIAAAAAAAAAAAAAAAAAAAAE",
                  "transactions": [
                    {
                      "address": "0x7893015832ea33bbe5ca7e4e3045ec2d6a749c8e",
                      "block_hash": "0x6761509c675c0afd7737611513e39e4334c0f4ed176992d92c57d7cc296f9d58",
                      "block_number": 40517009,
                      "block_time": "2024-05-18T09:32:32+00:00",
                      "block_version": 0,
                      "chain": "Ethereum",
                      "data": "0x4e71d92d",
                      "from": "0x7893015832ea33bbe5ca7e4e3045ec2d6a749c8e",
                      "gas_price": "0x62b85e900",
                      "hash": "0x029e21354ec2afad789c5fcd24987871d832b05b4159722a731d28141c2bd00f",
                      "index": 4,
                      "max_fee_per_gas": "0x835105080",
                      "max_priority_fee_per_gas": "0x59682f00",
                      "nonce": "0xd00b000000000000",
                      "to": "0x5857019c749147eee22b1fe63500f237f3c1b692",
                      "transaction_type": "Sender",
                      "value": "0x0"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed data"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error - A generic error occurred on the server"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Transaction": {
        "type": "object",
        "required": [
          "address",
          "chain",
          "block_time",
          "block_number",
          "block_version",
          "index",
          "hash",
          "block_hash",
          "value",
          "transaction_type",
          "from",
          "to",
          "nonce",
          "gas_price",
          "max_fee_per_gas",
          "max_priority_fee_per_gas",
          "data"
        ],
        "properties": {
          "address": {
            "type": "string"
          },
          "block_hash": {
            "type": "string"
          },
          "block_number": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "block_time": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "block_version": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "chain": {
            "type": "string"
          },
          "data": {
            "type": "string",
            "format": "binary"
          },
          "from": {
            "type": "string"
          },
          "gas_price": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "index": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "max_fee_per_gas": {
            "type": "string"
          },
          "max_priority_fee_per_gas": {
            "type": "string"
          },
          "nonce": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "transaction_type": {
            "$ref": "#/components/schemas/TransactionType"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "TransactionType": {
        "type": "string",
        "enum": [
          "Sender",
          "Receiver"
        ]
      },
      "TransactionsResponse": {
        "type": "object",
        "required": [
          "transactions"
        ],
        "properties": {
          "next_offset": {
            "type": "string",
            "nullable": true
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          }
        }
      }
    }
  }
}